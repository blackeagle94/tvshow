{"version":3,"sources":["components/pages/Episodes.js","components/pages/Home.js","redux/shows/showActions.js","redux/seasons/seasonsActions.js","redux/serach/searchActions.js","components/pages/Search.js","redux/episodes/episodesActions.js","components/pages/Seasons.js","components/pages/Shows.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["connect","state","episodes","data","dispatch","props","console","log","className","to","class","map","film","summary","replace","split","length","join","src","image","medium","alt","name","season","number","href","url","target","rel","Home","FETCH_SHOWS_REQUEST","FETCH_SHOWS_SUCCESS","FETCH_SHOWS_FAILURE","initialState","loading","error","fetchSHOWS","type","axios","get","then","response","films","payload","fetchSHOWSSucces","catch","fetchSHOWSFailure","message","showsFetchingReducer","action","FETCH_Seasons_REQUEST","FETCH_Seasons_SUCCESS","FETCH_Seasons_FAILURE","fetchSeasons","fetchSeasonsSucces","fetchSeasonsFailure","seasonsFetchingReducer","FETCH_SEARCH_REQUEST","FETCH_SEARCH_SUCCESS","FETCH_SEARCH_FAILURE","fetchSEARCH","fetchSEARCHSucces","fetchSEARCHFailure","SEARCHFetchingReducer","Shows","onClick","input","document","getElementById","value","id","placeholder","this","search","show","rating","average","language","genres","status","Component","searches","FETCH_Episodes_REQUEST","FETCH_Episodes_SUCCESS","FETCH_Episodes_FAILURE","fetchEpisodes","fetchEpisodesSucces","fetchEpisodesFailure","episodesFetchingReducer","Seasons","seasons","useSelector","useDispatch","style","textTransform","replaceAll","e","i","width","shows","slice","App","exact","path","Search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.388b170e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Episodes(props) {\r\n    console.log(props.episodes)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"d-flex justify-content-around\">\r\n\t\t\t<Link to=\"/\"><button className=\"btn btn-light\">Home Page</button></Link>\r\n\t\t\t\t<Link to=\"/seasons\"><button className=\"btn btn-light\">Go Back to Seasons</button></Link>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n\t\t\t\t{props.episodes ? props.episodes.map((film) => {\r\n                    const summary = film.summary ?  film.summary.replace('<p>', '').replace('</p>', '').split(' ').length >= 30 ? film.summary.replace('<p>', '').replace('</p>', '').split(' ').join(' ') : film.summary.replace('<p>', '').replace('</p>', '') : 'No summary'\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div class=\"col mt-2\">\r\n\t\t\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t\t\t<img src={film.image ? film.image.medium : 'https://askleo.askleomedia.com/wp-content/uploads/2004/06/no_image-300x245.jpg'} class=\"card-img-top\" alt=\"...\" />\r\n\t\t\t\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h5 class=\"card-title\">{film.name}</h5>\r\n\t\t\t\t\t\t\t\t\t<h6 class=\"card-title\">Season {film.season} Episode {film.number}</h6>\r\n\t\t\t\t\t\t\t\t\t<p class=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t{summary}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<a href={film.url} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-danger\">Go to website</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}) : 'Something went wrong please try again!'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tepisodes: state.episodes.data\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Episodes);\r\n","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <h1>Welcome to Tv Show Paradise</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios'\r\n\r\nconst FETCH_SHOWS_REQUEST = 'FETCH_SHOWS_REQUEST'\r\nconst FETCH_SHOWS_SUCCESS = 'FETCH_SHOWS_SUCCESS'\r\nconst FETCH_SHOWS_FAILURE = 'FETCH_SHOWS_FAILURE'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n}\r\n\r\nconst fetchSHOWSRequest = () => {\r\n    return {\r\n        type: FETCH_SHOWS_REQUEST\r\n    }\r\n}\r\n\r\nconst fetchSHOWSSucces= (films) => {\r\n    return {\r\n        type: FETCH_SHOWS_SUCCESS,\r\n        payload: films\r\n    }\r\n}\r\n\r\nconst fetchSHOWSFailure= (error) => {\r\n    return {\r\n        type: FETCH_SHOWS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst showsFetchingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_SHOWS_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n        case FETCH_SHOWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                data: [...state.data, action.payload],\r\n                error: ''\r\n            }\r\n        case FETCH_SHOWS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                data: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const fetchSHOWS = (url) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchSHOWSRequest())\r\n        axios.get(url)\r\n        .then(response => {\r\n            //response.data is array of SHOWS\r\n            const films = response.data\r\n            dispatch(fetchSHOWSSucces(films))\r\n        })\r\n        .catch(error => {\r\n            //error.message is the error description\r\n            dispatch(fetchSHOWSFailure(error.message))\r\n        })\r\n    }\r\n}\r\n\r\nexport default showsFetchingReducer","import axios from 'axios'\r\n\r\nconst FETCH_Seasons_REQUEST = 'FETCH_Seasons_REQUEST'\r\nconst FETCH_Seasons_SUCCESS = 'FETCH_Seasons_SUCCESS'\r\nconst FETCH_Seasons_FAILURE = 'FETCH_Seasons_FAILURE'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n}\r\n\r\nconst fetchSeasonsRequest = () => {\r\n    return {\r\n        type: FETCH_Seasons_REQUEST\r\n    }\r\n}\r\n\r\nconst fetchSeasonsSucces= (films) => {\r\n    return {\r\n        type: FETCH_Seasons_SUCCESS,\r\n        payload: films\r\n    }\r\n}\r\n\r\nconst fetchSeasonsFailure= (error) => {\r\n    return {\r\n        type: FETCH_Seasons_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst seasonsFetchingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_Seasons_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n        case FETCH_Seasons_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                data:  action.payload,\r\n                error: ''\r\n            }\r\n        case FETCH_Seasons_FAILURE:\r\n            return {\r\n                loading: false,\r\n                data: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const fetchSeasons = (url) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchSeasonsRequest())\r\n        axios.get(url)\r\n        .then(response => {\r\n            //response.data is array of Seasons\r\n            const films = response.data\r\n            dispatch(fetchSeasonsSucces(films))\r\n        })\r\n        .catch(error => {\r\n            //error.message is the error description\r\n            dispatch(fetchSeasonsFailure(error.message))\r\n        })\r\n    }\r\n}\r\n\r\nexport default seasonsFetchingReducer","import axios from 'axios'\r\n\r\nconst FETCH_SEARCH_REQUEST = 'FETCH_SEARCH_REQUEST'\r\nconst FETCH_SEARCH_SUCCESS = 'FETCH_SEARCH_SUCCESS'\r\nconst FETCH_SEARCH_FAILURE = 'FETCH_SEARCH_FAILURE'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n}\r\n\r\nconst fetchSEARCHRequest = () => {\r\n    return {\r\n        type: FETCH_SEARCH_REQUEST\r\n    }\r\n}\r\n\r\nconst fetchSEARCHSucces= (films) => {\r\n    return {\r\n        type: FETCH_SEARCH_SUCCESS,\r\n        payload: films\r\n    }\r\n}\r\n\r\nconst fetchSEARCHFailure= (error) => {\r\n    return {\r\n        type: FETCH_SEARCH_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst SEARCHFetchingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_SEARCH_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n        case FETCH_SEARCH_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                data: action.payload,\r\n                error: ''\r\n            }\r\n        case FETCH_SEARCH_FAILURE:\r\n            return {\r\n                loading: false,\r\n                data: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const fetchSEARCH = (url) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchSEARCHRequest())\r\n        axios.get(url)\r\n        .then(response => {\r\n            //response.data is array of SEARCH\r\n            const films = response.data\r\n            dispatch(fetchSEARCHSucces(films))\r\n        })\r\n        .catch(error => {\r\n            //error.message is the error description\r\n            dispatch(fetchSEARCHFailure(error.message))\r\n        })\r\n    }\r\n}\r\n\r\nexport default SEARCHFetchingReducer","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchSHOWS } from '../../redux/shows/showActions';\r\nimport { fetchSeasons } from '../../redux/seasons/seasonsActions';\r\nimport { fetchSEARCH } from '../../redux/serach/searchActions';\r\n\r\nclass Shows extends Component {\r\n\r\n\r\n\tonClick = () => {\r\n\t\tlet input = document.getElementById('input').value\r\n\t\tthis.props.fetchSEARCH(`http://api.tvmaze.com/search/shows?q=${input}`);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col\"><Link to=\"/\"><button className=\"btn btn-info\">Home Page</button></Link></div>\r\n\t\t\t\t\t<div className=\"d-flex col\"><input id=\"input\" className=\"input-group\" type=\"text\" placeholder=\"Search your favorite show...\"/>\r\n\t\t\t\t\t<button onClick={this.onClick} className=\"btn btn-secondary\">Search</button></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n\t\t\t\t\t{this.props.search.map((film) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={film.show.id} className=\"col mt-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<img src={film.show.image ? film.show.image.medium : 'https://askleo.askleomedia.com/wp-content/uploads/2004/06/no_image-300x245.jpg'} className=\"card-img-top\" alt=\"...\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body desciptions\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"card-title\">{film.show.name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRating: <span>{film.show.rating.average}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tLanguage: <span>{film.show.language}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tTypes:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{film.show.genres[0]} {film.show.genres[1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link id={film.show.id} className=\"btn btn-dark\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.fetchSeasons(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`http://api.tvmaze.com/shows/${film.show.id}/seasons`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tto=\"/seasons\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tShow more\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-footer mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tStatus: <span>{film.show.status}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsearch: state.searches.data\r\n\t};\r\n};\r\n\r\nconst mapDiapatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfetchSEARCH: (id) => dispatch(fetchSEARCH(id)),\r\n\t\tfetchSeasons: (id) => dispatch(fetchSeasons(id))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDiapatchToProps)(Shows);\r\n\r\n{\r\n\t/* <img src={film.image ? film.image.medium : ''} className=\"card-img-top\" alt=\"...\" />\r\n\t\t\t\t\t\t\t<div className=\"card-body desciptions\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"card-title\">{film.name}</h1>\r\n\t\t\t\t\t\t\t\t<p>\r\n                                <p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\tRating: <span>{film.rating.average}</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\tLanguage: <span>{film.language}</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\tTypes:{' '}\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{film.genres[0]} {film.genres[1]}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<Link to=\"/seasons\"><button type=\"button\" className=\"btn btn-dark\">\r\n\t\t\t\t\t\t\t\t\tShow more\r\n\t\t\t\t\t\t\t\t</button></Link>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer mt-2\">\r\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Status: <span>{film.status}</span></small>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                </p>\r\n\t\t\t\t\t\t\t</div> */\r\n}\r\n","import axios from 'axios'\r\n\r\nconst FETCH_Episodes_REQUEST = 'FETCH_Episodes_REQUEST'\r\nconst FETCH_Episodes_SUCCESS = 'FETCH_Episodes_SUCCESS'\r\nconst FETCH_Episodes_FAILURE = 'FETCH_Episodes_FAILURE'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n}\r\n\r\nconst fetchEpisodesRequest = () => {\r\n    return {\r\n        type: FETCH_Episodes_REQUEST\r\n    }\r\n}\r\n\r\nconst fetchEpisodesSucces= (films) => {\r\n    return {\r\n        type: FETCH_Episodes_SUCCESS,\r\n        payload: films\r\n    }\r\n}\r\n\r\nconst fetchEpisodesFailure= (error) => {\r\n    return {\r\n        type: FETCH_Episodes_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst episodesFetchingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_Episodes_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n        case FETCH_Episodes_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                data:  action.payload,\r\n                error: ''\r\n            }\r\n        case FETCH_Episodes_FAILURE:\r\n            return {\r\n                loading: false,\r\n                data: [],\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const fetchEpisodes = (url) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchEpisodesRequest())\r\n        axios.get(url)\r\n        .then(response => {\r\n            //response.data is array of Episodes\r\n            const films = response.data\r\n            dispatch(fetchEpisodesSucces(films))\r\n        })\r\n        .catch(error => {\r\n            //error.message is the error description\r\n            dispatch(fetchEpisodesFailure(error.message))\r\n        })\r\n    }\r\n}\r\n\r\nexport default episodesFetchingReducer","import React from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchEpisodes } from '../../redux/episodes/episodesActions';\r\n\r\nconst Seasons = (props) => {\r\n\tconst seasons = useSelector(state => state.seasons.data)\r\n\tconst dispatch = useDispatch()\r\n\treturn (\r\n\t\t<div>\r\n\t\t<div>\r\n\t\t\t\t<Link to=\"/search\"><button className=\"btn btn-light\">Go Back</button></Link>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row row-cols-1 row-cols-md-4 g-4\">\r\n\t\t\t\t{seasons.map((film) => \r\n\t\t\t\t{\t\r\n                    const summary = film.summary ?  film.summary.replace('<p>', '').replace('</p>', '').split(' ').length >= 30 ? film.summary.replace('<p>', '').replace('</p>', '').split(' ').join(' ') : film.summary.replace('<p>', '').replace('</p>', '') : 'No summary'\r\n                    return <div id={film.id} key={film.id} class=\"col mt-2\">\r\n\t\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t\t<img src={film.image ? film.image.medium : 'https://askleo.askleomedia.com/wp-content/uploads/2004/06/no_image-300x245.jpg'} class=\"card-img-top\" alt=\"...\" />\r\n\t\t\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h5 class=\"card-title\" style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t{film.url\r\n\t\t\t\t\t\t\t\t\t\t.replace(`http://www.tvmaze.com/seasons/${film.id}/`, '')\r\n\t\t\t\t\t\t\t\t\t\t.replaceAll('-', ' ')}\r\n\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t<p class=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t{summary}\r\n\t\t\t\t\t\t\t\t</p>\r\n                                <Link id={film.id} onClick={(e) => dispatch(fetchEpisodes(`http://api.tvmaze.com/seasons/${e.target.id}/episodes`))} to=\"/seasons/episodes\" className=\"btn btn-primary\">Episodes</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default (Seasons);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchSHOWS } from '../../redux/shows/showActions';\r\nimport { fetchSeasons } from '../../redux/seasons/seasonsActions';\r\nimport { fetchSEARCH } from '../../redux/serach/searchActions';\r\n\r\nclass Shows extends Component {\r\n\tcomponentDidMount() {\r\n\t\tlet show = [ 169, 82, 123, 335, 491, 3928, 83, 527, 73, 179, 430, 22 ];\r\n\t\tfor (let i = 0; i < show.length; i++) {\r\n\t\t\tthis.props.fetchSHOWS(`http://api.tvmaze.com/shows/${show[i]}`);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.fetchSHOWS(``);\r\n\t}\r\n\r\n\tonClick = () => {\r\n\t\tlet input = document.getElementById('input').value\r\n\t\tthis.props.fetchSEARCH(`http://api.tvmaze.com/search/shows?q=${input}`);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<input style={{width:'30%'}} id=\"input\" className=\"input-group\" type=\"text\" placeholder=\"Search your favorite show...\" />\r\n\t\t\t\t\t<Link to=\"/search\"><button onClick={this.onClick} className=\"btn btn-dark ms-2\">Search</button></Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row row-cols-1 row-cols-md-6 g-4\">\r\n\t\t\t\t\t{this.props.shows.map((film) => {\r\n\t\t\t\t\t\tconst summary = film.summary\r\n\t\t\t\t\t\t\t? film.summary.replace('<p>', '').replace('</p>', '').split(' ').length >= 30\r\n\t\t\t\t\t\t\t\t? film.summary.replace('<p>', '').replace('</p>', '').split(' ').slice(0, 30).join(' ') +\r\n\t\t\t\t\t\t\t\t\t'...'\r\n\t\t\t\t\t\t\t\t: film.summary.replace('<p>', '').replace('</p>', '')\r\n\t\t\t\t\t\t\t: 'No summary';\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={film.id} className=\"col mt-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<img src={film.image ? film.image.medium : 'https://askleo.askleomedia.com/wp-content/uploads/2004/06/no_image-300x245.jpg'} className=\"card-img-top\" alt=\"...\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body desciptions\">\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"card-title\">{film.name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRating: <span>{film.rating.average}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tLanguage: <span>{film.language}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tTypes:{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{film.genres[0]} {film.genres[1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.fetchSeasons(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`http://api.tvmaze.com/shows/${film.id}/seasons`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tto=\"/seasons\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tShow more\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-footer mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tStatus: <span>{film.status}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tshows: state.shows.data\r\n\t};\r\n};\r\n\r\nconst mapDiapatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfetchSHOWS: (id) => dispatch(fetchSHOWS(id)),\r\n\t\tfetchSeasons: (id) => dispatch(fetchSeasons(id)),\r\n\t\tfetchSEARCH: (id) => dispatch(fetchSEARCH(id))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDiapatchToProps)(Shows);\r\n\r\n{\r\n\t/* <img src={film.image ? film.image.medium : ''} className=\"card-img-top\" alt=\"...\" />\r\n\t\t\t\t\t\t\t<div className=\"card-body desciptions\">\r\n\t\t\t\t\t\t\t\t<h1 className=\"card-title\">{film.name}</h1>\r\n\t\t\t\t\t\t\t\t<p>\r\n                                <p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\tRating: <span>{film.rating.average}</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\tLanguage: <span>{film.language}</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\tTypes:{' '}\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{film.genres[0]} {film.genres[1]}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<Link to=\"/seasons\"><button type=\"button\" className=\"btn btn-dark\">\r\n\t\t\t\t\t\t\t\t\tShow more\r\n\t\t\t\t\t\t\t\t</button></Link>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer mt-2\">\r\n\t\t\t\t\t\t\t\t\t<small className=\"text-muted\">Status: <span>{film.status}</span></small>\r\n\t\t\t\t\t\t\t\t</div>\r\n                                </p>\r\n\t\t\t\t\t\t\t</div> */\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Episodes from './components/pages/Episodes';\nimport Home from './components/pages/Home';\nimport Search from './components/pages/Search';\nimport Seasons from './components/pages/Seasons';\nimport Shows from './components/pages/Shows';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n            <Home />\n      <Switch>\n        <Route exact path=\"/\"><Shows /></Route>\n        <Route exact path=\"/seasons\"> <Seasons/> </Route>\n        <Route path=\"/seasons/episodes\"> <Episodes /> </Route>\n        <Route path=\"/search\"> <Search /> </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, applyMiddleware, combineReducers} from 'redux'\r\nimport logger from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport episodesFetchingReducer from './episodes/episodesActions'\r\nimport seasonsFetchingReducer from './seasons/seasonsActions'\r\nimport showsFetchingReducer from './shows/showActions'\r\nimport SEARCHFetchingReducer from './serach/searchActions'\r\n\r\nconst rootReducer = combineReducers({\r\n    shows: showsFetchingReducer,\r\n    seasons: seasonsFetchingReducer,\r\n    episodes: episodesFetchingReducer,\r\n    searches: SEARCHFetchingReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, logger)))\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}